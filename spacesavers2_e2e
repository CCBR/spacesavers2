#!/usr/bin/env bash
####################################################################################
# spacesavers2 end-to-end wrapper script
####################################################################################
set -e -o pipefail

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# ncpus=`nproc`

ARGPARSE_DESCRIPTION="End-to-end run of spacesavers2"
source ${SCRIPT_DIR}/resources/argparse.bash || exit 1
argparse "$@" <<EOF || exit 1
parser.add_argument('-i','--infolder',required=True, help='Folder to run spacesavers_ls on.')
parser.add_argument('-p','--threads',required=False, help='number of threads to use', default=4)
parser.add_argument('-q','--quota',required=False, help='total size of the volume (default = 200 for /data/CCBR)', default=200)
parser.add_argument('-o','--outfolder',required=True, help='Folder where all spacesavers_finddup output files will be saved')
EOF

# ensure that python 3.11, python library xxhash and gnuparallel are in path
# this is currently biowulf specific but can be replaced to your case
. "/data/CCBR_Pipeliner/db/PipeDB/Conda/etc/profile.d/conda.sh"
conda activate py311
export PATH=${SCRIPT_DIR}:$PATH

if [ "$SLURM_JOB_ID" == "" ]; then 
    tmpdir="$OUTFOLDER"
else
    tmpdir="/lscratch/${SLURM_JOB_ID}"
fi

# run spacesavers2
dt=$(date +%Y%d%m)
prefix=$(echo "${dt}.${INFOLDER}"|sed "s/\//_/g")
outfile_ls="${prefix}.ls_out"
outfile_ls_err="${prefix}.ls_err"
outfile_finddup_log="${prefix}.finddup_log"
outfile_finddup_err="${prefix}.finddup_err"

if [ ! -d $OUTFOLDER ];then mkdir -p $OUTFOLDER;fi && \
spacesavers2_ls -f $INFOLDER -p $THREADS -e > ${OUTFOLDER}/${outfile_ls} 2> ${OUTFOLDER}/${outfile_ls_err} && \
spacesavers2_finddup -f ${OUTFOLDER}/${outfile_ls} -o ${OUTFOLDER} -q $QUOTA -z -d 3 -p $prefix > ${OUTFOLDER}/${outfile_finddup_log} 2> ${OUTFOLDER}/${outfile_finddup_err}