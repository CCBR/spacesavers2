---
title: "spacesavers2 ðŸš€ report"
author: "CCR Collaborative Bioinformatics Resource"
format: html
server: shiny
---

```{r deps}
library(dplyr)
library(ggplot2)
library(lubridate)
library(purrr)
library(readr)
library(stringr)
library(tidyr)
```


## Inputs and Outputs

You can embed Shiny inputs and outputs in your document. Outputs are automatically updated whenever inputs change. This demonstrates how a standard R plot can be made interactive:

```{r}
sliderInput("bins", "Number of bins:",
            min = 1, max = 50, value = 30)
plotOutput("distPlot")
```

```{r}
#| context: server
output$distPlot <- renderPlot({
   x <- faithful[, 2]  # Old Faithful Geyser data
   bins <- seq(min(x), max(x), length.out = input$bins + 1)
   hist(x, breaks = bins, col = 'darkgray', border = 'white',
        xlab = 'Waiting time to next eruption (in mins)',
        main = 'Histogram of waiting times')
})
```

```{r userdata}
input_dir <- 'data/20230925' # '/data/CCBR_Pipeliner/userdata/spacesavers2/'
aggregated_filetypes <- c('blamematrix','catalog','mimeo')
user_dat <- tibble(filename = list.files(input_dir, full.names = TRUE)) %>%
  filter(!str_detect(filename, paste(aggregated_filetypes, collapse = '|'))) %>%
  separate_wider_delim(filename, delim = '.', cols_remove = FALSE,
                       names = c("date", 'path', 'username', 'file', 'ext')) %>%

  filter(str_detect(ext, "tsv|txt")) %>%
  mutate(date = as_date(basename(date)))
```
```{r plot_summary_single}
users <- c('sovacoolkl', 'kopardevn')
dates <- as_date('2023-09-25')
metrics <- c('DuplicatesFiles','OverallScore','TotalFiles')
user_dat %>%
  filter(username %in% users, date %in% dates, file == 'summary') %>%
  pull(filename) %>%
  map(function(x) { read_tsv(x) %>% mutate(filename = x)}) %>%
  list_rbind() %>%
  separate_wider_delim(filename, delim = '.', cols_remove = FALSE,
                       names = c("date", 'path', 'username', 'file', 'ext')) %>%
  pivot_longer(where(is.numeric), names_to = 'metric') %>%
  filter(metric %in% metrics) %>%
  ggplot(aes(value, path, color = username)) +
  geom_boxplot() +
  facet_grid(~metric, scales = 'free')
```
