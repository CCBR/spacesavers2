---
title: "spacesavers2 ðŸš€ report"
author: "CCR Collaborative Bioinformatics Resource"
format:
  html:
    theme:
      bslib
    embed-resources: true
    toc: true
    code-fold: true
engine: knitr
---

```{r load}
#| message: false
library(bslib)
library(dplyr)
library(ggplot2)
library(glue)
library(here)
library(lubridate)
library(plotly)
library(purrr)
library(readr)
library(rlang)
library(stringr)
library(tidyr)

input_dir <- here('data') # '/data/CCBR_Pipeliner/userdata/spacesavers2/'
aggregated_filetypes <- c('blamematrix','catalog','mimeo')
# TODO: only load last N weeks of data
user_dat <- tibble(filename = list.dirs(input_dir) %>%
                     Filter(function(x) { x != input_dir }, .) %>%
                     lapply(function(x) { list.files(x, full.names = TRUE) }) %>%
                     unlist()
                   ) %>%
  filter(!str_detect(filename, paste(aggregated_filetypes, collapse = '|'))) %>%
  separate_wider_delim(filename, delim = '.', cols_remove = FALSE,
                       names = c("date", 'path', 'username', 'file', 'ext')) %>%

  filter(str_detect(ext, "tsv|txt")) %>%
  mutate(date = as_date(basename(date)))

dates <- user_dat %>% pull(date) %>% unique()
most_recent_date <- dates %>% max()
usernames <- user_dat %>% pull(username) %>% unique()

users_filter <- c('sovacoolkl', 'kopardevn') # TODO optionally select certain users
metrics_filter <- c('DuplicateBytes','OverallScore','TotalFiles') # TODO optionally select certain metrics
```

## Most recent summary (`r most_recent_date`)

```{r summary_recent}
#| message: false
summary_dat_recent <- user_dat %>%
  filter(username %in% users_filter, date == most_recent_date, file == 'summary') %>%
  pull(filename) %>%
  map(function(x) { read_tsv(x) %>% mutate(filename = x)}) %>%
  list_rbind() %>%
  separate_wider_delim(filename, delim = '.', cols_remove = FALSE,
                       names = c("basepath", 'path', 'username', 'file', 'ext'))
plots <- metrics_filter %>% lapply(function(metric) {
  p <- summary_dat_recent %>%
    ggplot(aes(eval_tidy(data_sym(metric)), path, color = username,
               text = glue("{username}\n{metric}\n{FolderPath}"))) +
    geom_jitter(height = 0.2, alpha = 0.7) +
    labs(x = metric)
  card(card_header(metric), ggplotly(p, tooltip = "text"))
})
page_fillable(plots)
```

## Summary over time

```{r summary_over_time}
#| message: false
summary_dat_all <- user_dat %>%
  filter(username %in% users_filter, file == 'summary') %>%
  pull(filename) %>%
  map(function(x) { read_tsv(x) %>% mutate(filename = x)}) %>%
  list_rbind() %>%
  separate_wider_delim(filename, delim = '.', cols_remove = FALSE,
                       names = c("basepath", 'path', 'username', 'file', 'ext')) %>%
  mutate(date = str_replace(basepath, ".*/", "") %>% as_date())
plots <- metrics_filter %>% lapply(function(metric) {
  p <- summary_dat_all %>%
    ggplot(aes(date, eval_tidy(data_sym(metric)), color = username,
               text = glue("{username}\n{metric}\n{FolderPath}"))) +
    geom_jitter(width = 0.2, alpha = 0.7) +
    labs(y = metric)
  nav_panel(title = metric, card_header(metric), ggplotly(p, tooltip = "text"))
})
do.call(navset_pill_list, plots)
navset_pill_list(plots[[1]], plots[[2]])
```
